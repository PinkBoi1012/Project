extends ../template/adminMain.template.pug
block content
  
    script. 
        $('.selectpicker').selectpicker();
    style. 
        input[type='number'] {
        -moz-appearance:textfield;
        }
        .bootstrap-select .bs-ok-default::after {
            width: 0.3em;
            height: 0.6em;
            border-width: 0 0.1em 0.1em 0;
            transform: rotate(45deg) translateY(0.5rem);
        }

        .btn.dropdown-toggle:focus {
            outline: none !important;
        }
        input::-webkit-outer-spin-button,
        input::-webkit-inner-spin-button {
        -webkit-appearance: none;
        }
   
    
    if errors
        -let styleValidate = "";
        -let showErrors = "";
        each error,errName in errors
            
            -errors.error = errName
            -styleValidate  = styleValidate+ "#"+errName+" {border-bottom: 2px solid red;}  " 
            -showErrors = showErrors + "$('#"+errName+"ErrorInput"+"').append('"+error+"').css('color','red'); "
    
          
        style.   
            #{styleValidate}
        
        script.
            
            $(document).ready(function(){
                #{showErrors} 
                
            })
           

        
       
    h1 Update product 
    div
     -console.log(values._id)
     form(action="/user/updateProduct" method="POST" enctype="multipart/form-data")
        input#_id(type="hidden" name="_id"  readonly value= values._id)
        label(for='P_name') Product Name 
        input#P_name.form-control(type='text', name='P_name', placeholder='Enter product name',value=values? values.P_name:'' )
        p#P_nameErrorInput
        label(for='TP_id') Choose Product Type
        select#TP_id.selectpicker.form-control(multiple name='TP_id' data-live-search="true" )
            -let dataArray =productDataDefaultSelectArray
            each PT_data in productTypeInfo
                if  dataArray.includes(PT_data._id.toString())
                    option(value=PT_data._id, selected) #{PT_data.TP_name}
                else
                    option(value=PT_data._id) #{PT_data.TP_name}
            //- Load all data of product type
        p#TP_idErrorInput
        
        label(for='P_description') Product Description
        input#P_description.form-control(type='text',name='P_description', placeholder='Enter description of product ',value=values? values.P_description:'' )
        p#P_descriptionErrorInput
        label(for='P_content') Content
        textarea#P_content.form-control(rows='4', cols='50' name='P_content', placeholder='Enter content of product ') #{value=values? values.P_content:''}
        p#P_contentErrorInput
        label(for='P_unit_price') Unit Price
        -console.log(values.P_unit_price)
        input#P_unit_price.form-control(type='number',name='P_unit_price',step="0.01", placeholder='Enter price per unit (currency unit is Dollar)', value=values? values.P_unit_price.toString():'')
        p#P_unit_priceErrorInput
        label(for='P_unit') Amount of storage
        input#P_unit.form-control(type='number',name='P_unit', placeholder='Enter amount of storage of product' value=values? values.P_unit:'' )
        p#P_unitErrorInput
        label(for='P_picture') Picture
        br
        img.center(src=pic, height='420', width='420')
        br
        br
        label(for='P_picture') Change Img
        input#P_picture.form-control(type='file',name='P_picture', placeholder='Choose Picture of Product' )
        p#P_pictureErrorInput
        button.btn.btn-primary(type='submit') Submit
        
